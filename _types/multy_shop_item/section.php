<?php 
defined('is_running') or die('Not an entry point...');


$section = array(); 

// Required: default values for new sections
// We merge $sectionCurrentValues right here, so we can use $section['values'] for conditional rendering down * in the 'content' key.
$section['values'] = array_merge(array( 
'shop_items' => array(//this is bunch control
	0=> array(	  'image'           =>  $sectionRelativeCode . '/img/default_image.png', // control_type = finder-select
				  'show_badge'      => '1', // control_type = checkbox
				  'badge_position'  => 'top-left', // control_type = radio group
				  'badge_color'     => '#ABD117', // control_type = colorpicker
				  'title'           => 'Custom Sections!', // control_type = text
				  'description'     => 'A brand-new plugin to <strong>prototype sections</strong> with custom editors <em>in no time</em>. Hands-on!', // control_type = ck_editor
				  'available'       => 'in stock', // control_type = select 
				  'price'           => '0.00', // control_type = number
				  'button_text'     => 'get it', // control_type = text
		),	

	), 
), $sectionCurrentValues );


// Required: we should always include an attributes array, even when it's empty
$section['attributes'] = array(
  'class' => '',  // optional: 'filetype-shop_item' class will be added by the system
  // 'style' => '', // optional inline styles
);


// Required: Predefined section content
// use {{value key}} for simple value placeholders/replacements
// use $section['values']['xyz'], e.g. for conditional rendering * whole elements 
$section['content'] = '<div class="row">';
foreach($section['values']['shop_items'] as $shop_item) {

$section['content'] .= '<div class="shop-item-box col-md-4 col-sm-6">';

$section['content'] .= '  <div class="image-clip"><img alt="Image of '.$shop_item['title'].'" src="'.$shop_item['image'].'" />';
if( $shop_item['show_badge']== '1' ){ // * here ;)
  $section['content'] .= '    <div class="item-badge item-badge-'.$shop_item['badge_position'].'" style="background-color:'.$shop_item['badge_color'].';">NEW!</div>';
}
$section['content'] .= ' </div>';


$section['content'] .= '<div class="item-info">
    <div class="row">
      <div class="col-xs-12 item-text">
        <h3 class="item-title text-center">'.$shop_item['title'].'</h3>
        <p class="item-description text-left">'.$shop_item['description'].'</p>
        <hr/>
      </div>
      <div class="col-md-6">
        <p><span class="fa-stack fa-1x"><i class="fa fa-circle fa-stack-2x text-primary"></i> <i class="fa fa-truck fa-stack-1x fa-inverse"></i></span>'.$shop_item['available'].'</p>
      </div>
      <div class="col-md-6 text-right">
        <h4 class="item-price">EUR '.$shop_item['price'].'</h4>
        <a href="#" class="btn btn-success btn-block" ><span class="fa fa-download">&zwnj;</span>'.$shop_item['button_text'].'</a>
      </div>
    </div>
  </div>
</div>
';

}
$section['content'] .= ' </div>';



/* ###################### */
/* ### end of content ### */
/* ###################### */


// Recommended: Section Label. If not defined, it will be generated from the folder name.
$section['gp_label'] = 'Multi Shop Item';

// Optional: Always process values - if set to true, content will always be generated by processing values, even when not logged-in.
// Using this option, sections may have dynamic content.
$section['always_process_values'] = false;

// Optional: Admin UI color label. This is solely used in the editor's section manager ('Page' mode)
$section['gp_color'] = '#DE3265';

// Optional: Loadable Components, see https://github.com/Typesetter/Typesetter/blob/master/include/tool/Output/Combine.php#L111
$components = 'fontawesome'; // comma separated string. If 'colorbox' is included \gp\tool::AddColorBox() will be called

// Ootional: Additional CSS and JS if needed
$css_files = array( 'style.css', ); // style.css must reside in this directory (_types/shop_item). Relative and absolute paths are also possible

// $style = 'body { background:red!important; }';

// $js_files = array( 'script.js', ); // script.js must reside in this directory (_types/shop_item). Relative and absolute paths are also possible.

// $javascript = 'var hello_world = "Hello World!";'; // this will add a global js variable 

// $jQueryCode = '$(".hello").on("click", function(){ alert("Click: " + hello_world); });';


/* ############################################################## */
/* ## EXAMPLES for JS to be executed when a section is updated ## */
/* ############################################################## */

/* Example for CurrenSections.onUpdate() function. 'this' refers to the section's jQuery object in the functions context: */
// $javascript = 'CustomSections = { onUpdate : function(){ console.log("CustomSections.onUpdate function called for ", $(this));} };'; 

/* Example for using the delegated CustomSection:updated event */
// $jQueryCode = '$(document).on("CustomSection:updated", "div.GPAREA", function(){ console.log("The event \"CustomSection:updated\" was triggered on section ", $(this)); });'; 

