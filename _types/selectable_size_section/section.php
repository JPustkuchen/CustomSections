<?php 
defined('is_running') or die('Not an entry point...');

/* ############################# */
/* ## SELECTABLE SIZE ## */
/* ############################# */

$section = array(); 

$section['values'] = array_merge(array( 
  'heading'         => 'Heading',                     // control_type = text
  'text'            => 'Some Text',                   // control_type = text
  'grid_classes'    => 'col-xs-12 col-sm-6 col-md-4', // control_type = radio_group
), $sectionCurrentValues );


// Required: we should always include an attributes array, even when it's empty
$section['attributes'] = array(
  'class' => 'col-xs-12 col-sm-6 col-md-4',  // optional: 'filetype-single_event' class will be added by the system
  // 'style' => '', // optional inline styles
);

// Required: Secton content
$section['content']  = '<div><h2>{{heading}}</h2><p>{{text}}</p></div>';

// Recommended: Section Label. If not defined, it will be generated from the folder name.
$section['gp_label'] = 'Selectable Size';

// Optional: Always process values - if set to true, content will always be generated by processing values, even when not logged-in.
// Using this option, sections may have dynamic content.
$section['always_process_values'] = false;

// Optional: Admin UI color label. This is solely used in the editor's section manager ('Page' mode)
$section['gp_color'] = '#002080';

// Optional: Loadable Components needed for rendering section to visitors, see https://github.com/Typesetter/Typesetter/blob/master/include/tool/Output/Combine.php#L111
// $components = 'fontawesome'; // comma separated string. If 'colorbox' is included \gp\tool::AddColorBox() will be called

// Ootional: Additional CSS and JS if needed
$css_files = array( 'style.css', ); // style.css must reside in this directory (_types/exent_box). Relative and absolute paths are also possible

// $style = 'body { background:red!important; }';

// $js_files = array( 'script.js', ); // script.js must reside in this directory (_types/exent_box). Relative and absolute paths are also possible.

// $javascript = 'var hello_world = "Hello World!";'; // this will add a global js variable 

// $jQueryCode = '$(".hello").on("click", function(){ alert("Click: " + hello_world); });';


/* ############################################################## */
/* ## EXAMPLES for JS to be executed when a section is updated ## */
/* ############################################################## */

/* Example for CurrenSections.onUpdate() function. 'this' refers to the section's jQuery object in the functions context: */
// $javascript = 'CustomSections = { onUpdate : function(){ console.log("CustomSections.onUpdate function called for ", $(this));} };'; 

/* Example for using the delegated CustomSection:updated event */
// $jQueryCode = '$(document).on("CustomSection:updated", "div.GPAREA", function(){ console.log("The event \"CustomSection:updated\" was triggered on section ", $(this)); });'; 

